Thyself

The project consists of various components. All data is stored in a central place.
This place can be approached by the other components, data can be requested and
edited. There are management and client accounts. Management accounts can be linked
to one or more client accounts, and view the results of these accounts. A Client
can be linked to multiple management accounts. The client can be seen as the data
provider, the person that enters the answers to questions. A Manager is a data
gatherer, that can view (& edit?) and download gathered information.

In the most simple case, a user wants to ask questions to himself. The user in
this case owns both a management and a client account. 


Management Console:
- login / logout
- view the list of clients
- view the list of questions
- view the summarized results per question
- view answers of all clients per question
- view answers of all questions per client
- download the results
- edit answered questions (?)
- add a question
- add an existing question
- add a collection of existing questions
- compare results of client for existing question with others
- compare summarized result of client for existing collection with others
- edit a recurring question

Client app:
- login / logout
- answer pending questions
- see / edit answered questions (?)
- smartphone extra: receive notification when new pending question (optional)
- smartphone extra: use widgets / shortcuts for answering specific questions (optional)


Use Case: Psychology researcher
The researcher will only use the management part of the app. Adding the
questions could be done using the web interface or by uploading a
standardized question file. The researcher creates multiple private collections, one
for each research group. It should be possible to change a collection, so
that collections can be transformed into other collections. The questions in
a collection can have an order, so that they are asked in the right order.

Now the researcher has multiple collections. He wants each participant to
fill in one collection. Each collection will have a unique identifier. The
researcher can tell the client what the identifier is, and the client can
use this identifier to 'subscribe' to this collection.

A collection consists of one or more questions. Each question can be asked
one time or recurring. The questions are ordered. 


Use Case: Client Smartphone
The app is opened to reveal the pending questions, and the answered
questions. User can click on an question to answer it, and swi


Type of questions:
* I just did something. Not really an question answer type of thing,
  but should be possible. Maybe not show these in pending questions,
  but in some other way. Should provide widget that can be clicked.
* How much ... did you do from yesterday to today? 
* Normal question




Let's make things easier.

A smartphone app that uses a widget to say that you just did something.
A measurement is added with timestamp(, and sent to web api). You can share
your results.

Start app
